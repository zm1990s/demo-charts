apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-postgres
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    tier: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      tier: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        tier: postgres
    spec:
      containers:
      - name: {{ .Chart.Name }}-postgres
        image: "{{ .Values.image.repository.postgres }}"
        imagePullPolicy: IfNotPresent
        env:
        - name: DB_USER
          value: gitlab
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: postgresql-pass
              key: password
        - name: DB_NAME
          value: gitlab_production
        - name: DB_EXTENSION
          value: pg_trgm
        ports:
          - name: postgres
            containerPort: 5432
            protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/postgresql
          name: gitlab-db
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
            - -U
            - postgres
          initialDelaySeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
            - -U
            - postgres
          initialDelaySeconds: 5
          timeoutSeconds: 1
          failureThreshold: 3
      volumes:
      - name: gitlab-db
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: "{{ .Chart.Name }}-db"
      {{- else }}
        emptyDir: {}
      {{- end }}