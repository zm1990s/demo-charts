apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-gitlab
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    tier: gitlab
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      tier: gitlab
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        tier: gitlab
    spec:
      initContainers:
      - name: {{ .Chart.Name }}-init
        image: "busybox:latest"
        command: ["sh","-c"]
        args: [ set -xe && until nc -zv "{{ .Chart.Name }}-postgresql" 5432; do sleep 5; done &&  until nc -zv "{{ .Chart.Name }}-redis" 6379; do sleep 5; done]
      containers:
      - name: {{ .Chart.Name }}-gitlab
        image: "{{ .Values.image.repository.gitlab }}"
        imagePullPolicy: IfNotPresent
        env:
        - name: GITLAB_HOST
          value: "{{ .Values.hostname }}"
        - name: HOSTNAME
          value: "{{ .Values.hostname }}"
        - name: GITLAB_OMNIBUS_CONFIG
          value: "{{ .Values.omnibus_config }}"
        - name: TZ
          value: Asia/Shanghai
        - name: GITLAB_TIMEZONE
          value: Beijing
        - name: GITLAB_SECRETS_DB_KEY_BASE
          value: long-and-random-alpha-numeric-string
        - name: GITLAB_SECRETS_SECRET_KEY_BASE
          value: long-and-random-alpha-numeric-string
        - name: GITLAB_SECRETS_OTP_KEY_BASE
          value: long-and-random-alpha-numeric-string
        - name: GITLAB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gitlab-root-pass
              key: password
        - name: GITLAB_ROOT_EMAIL
          value: "{{ .Values.rootemail }}"
        - name: GITLAB_PORT
          value: "{{ .Values.service.nodePort.http }}"
        - name: GITLAB_SSH_PORT
          value: "{{ .Values.service.nodePort.ssh }}"
        - name: GITLAB_NOTIFY_ON_BROKEN_BUILDS
          value: "true"
        - name: GITLAB_NOTIFY_PUSHER
          value: "false"
        - name: GITLAB_BACKUP_SCHEDULE
          value: daily
        - name: GITLAB_BACKUP_TIME
          value: 01:00
        - name: DB_TYPE
          value: postgres
        - name: DB_HOST
          value: "{{ .Chart.Name }}-postgresql"
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          value: gitlab
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: postgresql-pass
              key: password
        - name: DB_NAME
          value: gitlab_production
        - name: REDIS_HOST
          value: "{{ .Chart.Name }}-redis"
        - name: REDIS_PORT
          value: "6379"
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
            name: https
            containerPort: 443
            protocol: TCP
            name: ssh
            containerPort: 22
            protocol: TCP
        volumeMounts:
        - mountPath: /home/git/data
          name: gitlab-data
        startupProbe:
          httpGet:
            path: /
            port: 80
          failureThreshold: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 120
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 3
      volumes:
      - name: gitlab-data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: "{{ .Chart.Name }}-data"
      {{- else }}
        emptyDir: {}
      {{- end }}